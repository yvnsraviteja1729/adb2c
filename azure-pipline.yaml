trigger:
  - master
  - feature/trigger-poc

pool:
  vmImage: "windows-latest"

parameters:
  - name: callerPL
    displayName: "Run stage 4"
    type: boolean
    default: false

variables:
  - name: check2
    value: false

stages:
  - stage: first
    # condition: eq(variables.check1, 'true')
    variables:
      - group: perf_variables
    jobs:
      - job: Building_Policies
        steps:
              
        - bash: echo This script could use $SYSTEM_ACCESSTOKEN
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        - powershell: | 
            Write-Host "This is a script that could use $env:SYSTEM_ACCESSTOKEN"
            Write-Host "$env:SYSTEM_ACCESSTOKEN = $(System.AccessToken)"
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        - task: Bash@3
          name: Bash123
          inputs:
              targetType: "inline"
              script: |
                # Write your commands here
                echo 'Hello world'
                echo '##vso[task.setvariable variable=Checker;isOutput=true]true'
                echo $(check1)

  - stage: second
    dependsOn: first
    # variables:
    #     - group: perf_variables
    jobs:
      - job: Building_Policies

        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                # Write your commands here
                echo 'Hello world'
                echo $(check)

  - stage: third
    dependsOn: first
    condition: eq('${{ parameters.callerPL }}', 'true')
    # variables:
    #     - group: perf_variables
    jobs:
      - job: Building_Policies

        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                # Write your commands here
                echo 'Hello world'
  - stage: fourth
    dependsOn:
      - third
      - second
    variables:
      - group: perf_variables
      - name: checker
        value: $[ dependencies.first.outputs['Building_Policies.Bash123.Checker'] ]  
        # value: $[ stageDependencies.first.Building_Policies.outputs['Bash123.Checker'] ]  
    condition: eq(variables['checker'], 'true')
    jobs:
      - job: Building_Policies
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                # Write your commands here
                echo 'Hello world 3'
                echo $(check)
