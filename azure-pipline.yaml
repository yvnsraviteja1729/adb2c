trigger:
  - master
  - feature/pipeline

pool:
  vmImage: "windows-latest"

stages:
  - stage:
    jobs:
      - job: Building_Policies
        steps:
          - task: PowerShell@2
            inputs:
              targetType: "inline"
              script: |
                # Echo out the Variables for the log      
                # write-host $(B2CTENANTNAME) $(CLIENTCREDAPPID) $(ProxyIdentityExperienceFrameworkAppName) $(IdentityExperienceFrameworkAppName) $(B2CExtensionAttributeAppName) $(AppInsightInstrumentationKey) 
                # run the deployment script that modifies the policies and then uploads them
                # .\scripts\build-prepare.ps1 -PolicyPath .\policies -PolicyPrefix $(B2CPolicyPrefix) -TenantName $(B2CTENANTNAME) -AppID $(CLIENTCREDAPPID) -AppKey $(CLIENTCREDAPPKEY) -ProxyIdentityExperienceFrameworkAppName $(ProxyIdentityExperienceFrameworkAppName) -IdentityExperienceFrameworkAppName $(IdentityExperienceFrameworkAppName) -B2CExtensionAttributeAppName $(B2CExtensionAttributeAppName) -ConfigKeyValues $params 
                .\runShells.ps1 -ScriptsPath ".\scripts"
          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(System.DefaultWorkingDirectory)/policies"
              Contents: "**"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/policies"
              CleanTargetFolder: true
              OverWrite: true

          
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              # publishLocation: ""      
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop2"
              # publishLocation: "Container"          
      - job: download
        dependsOn: Building_Policies
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.DefaultWorkingDirectory)'

        - task: DownloadBuildArtifacts@0
          inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop2'
                    downloadPath: '$(System.ArtifactsDirectory)'

        - task: Bash@3
          inputs:
              targetType: "inline"
              script: |
                ls 
                echo $(System.DefaultWorkingDirectory)
                echo $(System.ArtifactsDirectory)
                pwd
                cd $(System.ArtifactsDirectory)
                pwd
                ls
               